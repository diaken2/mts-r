const fs = require('fs');
const path = require('path');

// –ö–∞—Ä—Ç–∞ –∑–∞–º–µ–Ω –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ú–¢–° –¢–í –Ω–∞ KION
const replacements = {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–º–µ–Ω—ã
  '–ú–¢–° –¢–í': 'KION',
  '–º—Ç—Å-—Ç–≤': 'kion',
  '–º—Ç—Å —Ç–≤': 'kion',
  
  // –û–ø–∏—Å–∞–Ω–∏—è —É—Å–ª—É–≥
  '–ú–¢–° –¢–í –Ω–∞ 180 –¥–Ω–µ–π (20 000 —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤)': 'KION –Ω–∞ 180 –¥–Ω–µ–π (20 000 —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤)',
  '–ú–¢–° –¢–í (20 000 —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤)': 'KION (20 000 —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤)',
  '–ú–¢–° –¢–í –≤–∫–ª—é—á–µ–Ω': 'KION –≤–∫–ª—é—á–µ–Ω',
  
  // –ò–∫–æ–Ω–∫–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  'src="/icons/wink.png"': 'src="/icons/kion.png"',
  'alt="–ú–¢–° –¢–í"': 'alt="KION"',
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
  '–ú–¢–° –¢–í –≤': 'KION –≤',
  '–ú–¢–° –¢–í –∏': 'KION –∏',
  '–ú–¢–° –¢–í,': 'KION,',
  '–ú–¢–° –¢–í.': 'KION.',
  '–ú–¢–° –¢–í!': 'KION!',
  '–ú–¢–° –¢–í?': 'KION?',
  
  // –í —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–∞–¥–µ–∂–∞—Ö
  '–ú–¢–° –¢–í–æ–º': 'KION',
  '–ú–¢–° –¢–í—É': 'KION',
  '–ú–¢–° –¢–í–∞': 'KION',
  '–ú–¢–° –¢–í–æ–º': 'KION',
  '–ú–¢–° –¢–í–µ': 'KION',
  
  // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Ç–∞—Ä–∏—Ñ–æ–≤
  '—Å –ú–¢–° –¢–í': '—Å KION',
  '–≤–∫–ª—é—á–∞–µ—Ç –ú–¢–° –¢–í': '–≤–∫–ª—é—á–∞–µ—Ç KION',
  '–¥–æ—Å—Ç—É–ø –∫ –ú–¢–° –¢–í': '–¥–æ—Å—Ç—É–ø –∫ KION',
  '–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ú–¢–° –¢–í': '–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ KION',
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
function walkDir(dir, callback) {
  const files = fs.readdirSync(dir);
  
  files.forEach(file => {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);
    
    if (stat.isDirectory()) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º node_modules –∏ .git
      if (file !== 'node_modules' && file !== '.git' && !file.startsWith('.')) {
        walkDir(filePath, callback);
      }
    } else {
      callback(filePath);
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
function processFile(filePath) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    const ext = path.extname(filePath).toLowerCase();
    const textExtensions = ['.js', '.jsx', '.ts', '.tsx', '.json', '.md', '.txt', '.css', '.html'];
    
    if (!textExtensions.includes(ext)) {
      return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã
    }
    
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    let content = fs.readFileSync(filePath, 'utf8');
    let originalContent = content;
    let hasChanges = false;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã
    for (const [oldText, newText] of Object.entries(replacements)) {
      if (content.includes(oldText)) {
        content = content.replace(new RegExp(oldText.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), newText);
        hasChanges = true;
      }
    }
    
    // –ï—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    if (hasChanges) {
      fs.writeFileSync(filePath, content, 'utf8');
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: ${filePath}`);
    }
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${filePath}:`, error.message);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–º–µ–Ω—É –ú–¢–° –¢–í –Ω–∞ KION...\n');
  
  let processedFiles = 0;
  let updatedFiles = 0;
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
  walkDir('.', (filePath) => {
    processedFiles++;
    const originalContent = fs.readFileSync(filePath, 'utf8');
    processFile(filePath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    const newContent = fs.readFileSync(filePath, 'utf8');
    if (originalContent !== newContent) {
      updatedFiles++;
    }
  });
  
  console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`- –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${processedFiles}`);
  console.log(`- –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${updatedFiles}`);
  console.log(`\n‚úÖ –ó–∞–º–µ–Ω–∞ –ú–¢–° –¢–í –Ω–∞ KION –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
  console.log(`\n‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∏–∫–æ–Ω–∫—É: public/icons/kion.png`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main(); 