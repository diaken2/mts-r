import React, { useState } from 'react';
import Image from 'next/image';
import { useSupportOnly } from '@/context/SupportOnlyContext';

interface HowConnectProps {
  onOpenSegmentationModal?: () => void;
}

export default function HowConnect({ onOpenSegmentationModal }: HowConnectProps) {
  const { isSupportOnly } = useSupportOnly();
  const [hoveredStep, setHoveredStep] = useState<number | null>(null);

  const steps = [
    {
      number: 1,
      icon: "/steps/step1.svg",
      title: "–®–∞–≥ 1",
      description: isSupportOnly ? (
        "–í—ã –æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ"
      ) : (
        <>
          –í—ã –æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ <button className="text-[#ee3c6b] underline font-semibold hover:text-[#ff0032] transition-colors" type="button" onClick={onOpenSegmentationModal}>–∑–∞—è–≤–∫—É</button> –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É <a className="text-[#ee3c6b] font-semibold hover:text-[#ff0032] transition-colors" href="tel:88003509910">8 800 350-99-10</a>
        </>
      )
    },
    {
      number: 2,
      icon: "/steps/step2.svg",
      title: "–®–∞–≥ 2",
      description: "–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∑—ã–≤–∞–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π, —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–µ–∑–¥–∞ –º–∞—Å—Ç–µ—Ä–∞"
    },
    {
      number: 3,
      icon: "/steps/step3.svg",
      title: "–®–∞–≥ 3",
      description: "–í –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –º–æ–Ω—Ç–∞–∂–Ω–∏–∫ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
    }
  ];

  return (
    <section className="container mx-auto px-4 py-16 md:py-24">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º */}
      <div className="text-center mb-16 relative">
        <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
          –ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫{' '}
          <span className="bg-gradient-to-r from-[#ee3c6b] to-[#ff0032] bg-clip-text text-transparent">
            –ú–¢–°
          </span>
        </h2>
        <div className="w-24 h-1 bg-gradient-to-r from-[#ee3c6b] to-[#ff0032] mx-auto rounded-full"></div>
        <div className="absolute -top-4 -left-4 w-32 h-32 bg-gradient-to-r from-[#ee3c6b]/10 to-[#ff0032]/10 rounded-full blur-3xl -z-10"></div>
        <div className="absolute -bottom-4 -right-4 w-32 h-32 bg-gradient-to-r from-[#8e66e4]/10 to-[#c1d8fb]/10 rounded-full blur-3xl -z-10"></div>
      </div>

      {/* –®–∞–≥–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8 lg:gap-12 relative">
        {/* –°–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
        <div className="hidden md:block absolute top-20 left-1/2 transform -translate-x-1/2 w-2/3 h-1 bg-gradient-to-r from-[#ee3c6b] via-[#8e66e4] to-[#c1d8fb] rounded-full"></div>
        
        {steps.map((step, index) => (
          <div
            key={step.number}
            className="relative group"
            onMouseEnter={() => setHoveredStep(step.number)}
            onMouseLeave={() => setHoveredStep(null)}
          >
            {/* –ù–æ–º–µ—Ä —à–∞–≥–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
            <div className="absolute -top-4 -left-4 w-12 h-12 bg-gradient-to-r from-[#ee3c6b] to-[#ff0032] rounded-full flex items-center justify-center text-white font-bold text-lg shadow-lg transform group-hover:scale-110 transition-transform duration-300 z-10">
              {step.number}
            </div>

            {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —à–∞–≥–∞ */}
            <div className={`
              bg-white rounded-2xl p-8 h-full border-2 border-transparent
              transition-all duration-300 transform
              ${hoveredStep === step.number
                ? 'border-[#ee3c6b] shadow-2xl scale-105'
                : 'shadow-lg hover:shadow-xl'
              }
              ${hoveredStep && hoveredStep !== step.number ? 'opacity-80' : 'opacity-100'}
            `}>
              {/* –ò–∫–æ–Ω–∫–∞ */}
              <div className={`
                w-20 h-20 mx-auto mb-6 rounded-2xl flex items-center justify-center
                bg-gradient-to-br from-gray-50 to-gray-100
                transition-all duration-300
                ${hoveredStep === step.number
                  ? 'transform scale-110 bg-gradient-to-br from-[#ff0032]/10 to-[#ee3c6b]/10'
                  : ''
                }
              `}>
                <div className={`
                  w-14 h-14 bg-gradient-to-r from-[#ee3c6b] to-[#ff0032] rounded-xl
                  flex items-center justify-center
                  transition-all duration-300
                  ${hoveredStep === step.number ? 'transform scale-110' : ''}
                `}>
                  <Image
                    width={32}
                    height={32}
                    alt={`–®–∞–≥ ${step.number}`}
                    src={step.icon}
                    className="text-white filter brightness-0 invert"
                  />
                </div>
              </div>

              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <h3 className="text-xl font-bold text-gray-900 text-center mb-4">
                {step.title}
              </h3>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <p className="text-gray-700 text-center leading-relaxed">
                {step.description}
              </p>

              {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
              {hoveredStep === step.number && (
                <div className="absolute inset-0 rounded-2xl bg-gradient-to-br from-[#ee3c6b]/5 to-[#ff0032]/5 -z-10"></div>
              )}
            </div>

            {/* –°—Ç—Ä–µ–ª–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ */}
            {index < steps.length - 1 && (
              <div className="md:hidden flex justify-center my-6">
                <div className="w-8 h-8 bg-gradient-to-r from-[#ee3c6b] to-[#ff0032] rounded-full flex items-center justify-center">
                  <svg className="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 14l-7 7m0 0l-7-7m7 7V3" />
                  </svg>
                </div>
              </div>
            )}
          </div>
        ))}
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="text-center mt-16">
        <div className="bg-gradient-to-r from-[#8e66e4]/10 to-[#c1d8fb]/10 rounded-2xl p-8 border border-[#8e66e4]/20">
          <h3 className="text-2xl font-bold text-gray-900 mb-4">
            üöÄ –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞ 24 —á–∞—Å–∞
          </h3>
          <p className="text-gray-700 mb-6">
            –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –º—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ –ø–æ—Å–ª–µ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏
          </p>
          {!isSupportOnly && (
            <button
              onClick={onOpenSegmentationModal}
              className="bg-gradient-to-r from-[#ee3c6b] to-[#ff0032] text-white font-bold py-4 px-8 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
            >
              –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            </button>
          )}
        </div>
      </div>
    </section>
  );
}