const fs = require('fs');
const path = require('path');

// –ö–∞—Ä—Ç–∞ –∑–∞–º–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ–¥ –ú–¢–°
const replacements = {
  // –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã
  'linear-gradient(90deg, #F26A2E 0%, #7B2FF2 100%)': 'linear-gradient(90deg, #E30613 0%, #000000 100%)',
  'linear-gradient(135deg, #FF4D06 0%, #2B4FFF 100%)': 'linear-gradient(135deg, #E30613 0%, #000000 100%)',
  'linear-gradient(135deg, #F36D3B 0%, #7B2AFB 100%)': 'linear-gradient(135deg, #E30613 0%, #000000 100%)',
  
  // –ö–ª–∞—Å—Å—ã –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤
  'bg-gradient-to-r from-[#ff6a2b] to-[#a84fd4]': 'bg-gradient-mts',
  'bg-gradient-to-r from-[#ed6a40] to-[#7c2bf6]': 'bg-gradient-mts-horizontal',
  'bg-gradient-to-r from-[#F26A2E] to-[#7B2FF2]': 'bg-gradient-mts-horizontal',
  'bg-gradient-to-r from-[#ff4f12] to-[#7750ff]': 'bg-gradient-mts-horizontal',
  'bg-gradient-to-r from-[#FF6633] via-[#C4387C] to-[#6637FF]': 'bg-gradient-mts-horizontal',
  
  // –¶–≤–µ—Ç–∞ –∫–Ω–æ–ø–æ–∫
  'bg-[#ff5c00]': 'bg-mts-red',
  'bg-[#ff4d06]': 'bg-mts-red',
  'bg-[#FF4F12]': 'bg-mts-red',
  'bg-[#FF4B00]': 'bg-mts-red',
  'bg-[#ff6a2b]': 'bg-mts-red',
  'bg-orange-500': 'bg-mts-red',
  
  // Hover —ç—Ñ—Ñ–µ–∫—Ç—ã
  'hover:bg-[#ff7f2a]': 'hover:bg-mts-red-dark',
  'hover:bg-[#e04300]': 'hover:bg-mts-red-dark',
  'hover:bg-orange-600': 'hover:bg-mts-red-dark',
  
  // –ì—Ä–∞–Ω–∏—Ü—ã –∏ –∞–∫—Ü–µ–Ω—Ç—ã
  'border-[#FF4F12]': 'border-mts-red',
  'border-[#FF4B00]': 'border-mts-red',
  'border-[#ff5c00]': 'border-mts-red',
  'hover:border-[#FF4B00]': 'hover:border-mts-red',
  'hover:border-[#FF4F12]': 'hover:border-mts-red',
  'hover:border-[#ff5c00]': 'hover:border-mts-red',
  
  // –¢–µ–∫—Å—Ç
  'text-[#FF4B00]': 'text-mts-red',
  'text-[#FF4F12]': 'text-mts-red',
  'text-[#ff5c00]': 'text-mts-red',
  
  // –§–æ–Ω—ã
  'bg-[#FF4B0008]': 'bg-mts-red/8',
  'bg-[#FF4B0011]': 'bg-mts-red/16',
  
  // –°–ª–∞–π–¥–µ—Ä—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã
  'bg-[#FF6600]': 'bg-mts-red',
  'border-[#FF6600]': 'border-mts-red',
  
  // –§–æ–∫—É—Å –∏ –∫–æ–ª—å—Ü–∞
  'focus:ring-orange-500': 'focus:ring-mts-red',
  'focus:border-[#FF4D15]': 'focus:border-mts-red',
  'focus:ring-[#FFF4F0]': 'focus:ring-mts-red/25',
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞
  'bg-[#FFD6C2]': 'bg-mts-red/20',
  'bg-[#FFF4F0]': 'bg-mts-red/10',
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –æ–±—Ö–æ–¥–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
function walkDir(dir, callback) {
  const files = fs.readdirSync(dir);
  
  files.forEach(file => {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);
    
    if (stat.isDirectory()) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º node_modules –∏ .git
      if (file !== 'node_modules' && file !== '.git' && !file.startsWith('.')) {
        walkDir(filePath, callback);
      }
    } else {
      callback(filePath);
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
function processFile(filePath) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    const ext = path.extname(filePath).toLowerCase();
    const textExtensions = ['.js', '.jsx', '.ts', '.tsx', '.json', '.md', '.txt', '.css', '.html'];
    
    if (!textExtensions.includes(ext)) {
      return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã
    }
    
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    let content = fs.readFileSync(filePath, 'utf8');
    let originalContent = content;
    let hasChanges = false;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã
    for (const [oldText, newText] of Object.entries(replacements)) {
      if (content.includes(oldText)) {
        content = content.replace(new RegExp(oldText.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), newText);
        hasChanges = true;
      }
    }
    
    // –ï—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    if (hasChanges) {
      fs.writeFileSync(filePath, content, 'utf8');
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: ${filePath}`);
    }
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${filePath}:`, error.message);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üé® –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ–¥ —Å—Ç–∏–ª—å –ú–¢–°...\n');
  
  let processedFiles = 0;
  let updatedFiles = 0;
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
  walkDir('.', (filePath) => {
    processedFiles++;
    const originalContent = fs.readFileSync(filePath, 'utf8');
    processFile(filePath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    const newContent = fs.readFileSync(filePath, 'utf8');
    if (originalContent !== newContent) {
      updatedFiles++;
    }
  });
  
  console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`- –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${processedFiles}`);
  console.log(`- –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${updatedFiles}`);
  console.log(`\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
  console.log(`\nüé® –û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:`);
  console.log(`- –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã: –æ—Ä–∞–Ω–∂–µ–≤—ã–π-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π ‚Üí –∫—Ä–∞—Å–Ω—ã–π-—á–µ—Ä–Ω—ã–π`);
  console.log(`- –ö–Ω–æ–ø–∫–∏: –æ—Ä–∞–Ω–∂–µ–≤—ã–µ ‚Üí –∫—Ä–∞—Å–Ω—ã–µ –ú–¢–°`);
  console.log(`- –ê–∫—Ü–µ–Ω—Ç—ã: –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–¥ —Å—Ç–∏–ª—å –ú–¢–°`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main(); 